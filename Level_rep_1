# -*- coding: utf-8 -*-
"""
Created on Tue Nov 24 13:57:21 2015

@author: mbcx2dg2
"""
import matplotlib.pyplot as plt
import numpy as np
import QRTRstad_level_rep as QS
import time
import itertools

s_state = 7
r=41 
c=[]
ratio=[]
# measure process time
t0 = time.clock()
for i in range(1,8):#r+1):
    c.append(r+i*2)
    ratio.append((c[i-1]-1)/(r-1))

wvfns=[]
val=[]
for i in range(0,len(c)):
    z, E = QS.main(r,c[i],s_state)
    wvfns.append(z)
    val.append(E)

fig = plt.figure(figsize=(15,10))
ddots=[]
for max1 in range(0,s_state):
#max1=5
    label = max1
    Eval=[]
    Eval.append(val[0][max1])
    print('\n')
    for j in range(1,len(c)):
        dots=[]
        for i in range(0,s_state):
            dots.append(np.dot(wvfns[j-1][max1],wvfns[j][i]))
        ddots.append(dots)
        max1,max2 = max(enumerate(dots), key=lambda x: x[1])
        print(max1,max2)
        Eval.append(val[j][max1])
        print(dots)  
        
    #print(ratio)  
    #print(Eval)
    plt.plot(ratio, Eval, label='Level %i' %label)
    plt.title('Level Repulsion', fontsize=30)
    plt.xlabel('Aspect Ratio',fontsize=20)
    plt.ylabel('Energy',fontsize=20)
    plt.xlim(min(ratio),max(ratio))
    plt.legend()
comp_time = (time.clock()-t0)/60.0
print("TIME TO COMPUTE: %f mins" %comp_time)    
plt.show()
fig.savefig('Level_rep_%i_%1.2f.png' %(s_state, max(ratio)))
